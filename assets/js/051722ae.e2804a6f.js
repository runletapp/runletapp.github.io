"use strict";(self.webpackChunkrunlet_website=self.webpackChunkrunlet_website||[]).push([[3625],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5586:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(4137)),a=["components"],l={id:"settings",title:"Settings",sidebar_label:"Settings"},s=void 0,c={unversionedId:"job/settings",id:"job/settings",title:"Settings",description:"In the configuration file is also possible to define unique settings.",source:"@site/docs/job/settings.md",sourceDirName:"job",slug:"/job/settings",permalink:"/docs/job/settings",draft:!1,editUrl:"https://github.com/runletapp/website/edit/main/docs/job/settings.md",tags:[],version:"current",frontMatter:{id:"settings",title:"Settings",sidebar_label:"Settings"},sidebar:"docs",previous:{title:"Scheduling",permalink:"/docs/job/scheduling"},next:{title:"Terms of Service",permalink:"/docs/policies/terms"}},u={},p=[{value:"Default Entrypoint",id:"default-entrypoint",level:3},{value:"Daemon Management",id:"daemon-management",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"In the configuration file is also possible to define unique settings.")),(0,i.kt)("h3",{id:"default-entrypoint"},"Default Entrypoint"),(0,i.kt)("p",null,"To define a default entrypoint to all jobs, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint")," key."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'settings:\n    entrypoint: [ "node" ]\n\nmyjob: |\n  console.log("Hello world")\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint")," key will ensure that all jobs will use by default that value. Users can override it by redefining the entrypoint inside the job block."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'settings:\n    entrypoint: [ "node" ]\n\nmyjob:\n    script: |\n        print("Hello world")\n    entrypoint: [ "python" ]\n')),(0,i.kt)("h3",{id:"daemon-management"},"Daemon Management"),(0,i.kt)("p",null,"Users can control the state of daemons in the settings as well. Suppose we have a daemon named ",(0,i.kt)("inlineCode",{parentName:"p"},"koalatime")," linked to our account. We can then control whether that daemon is enabled or not with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"settings:\n    daemons:\n        koalatime:\n            enabled: false\n\nmyjob: ls -lah\n")),(0,i.kt)("p",null,"The last code block will disable the daemon ",(0,i.kt)("inlineCode",{parentName:"p"},"koalatime")," and blocks it from receiving jobs. You can see the status of daemons in the GUI."))}m.isMDXComponent=!0}}]);