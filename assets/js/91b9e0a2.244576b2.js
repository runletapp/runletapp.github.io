"use strict";(self.webpackChunkrunlet_website=self.webpackChunkrunlet_website||[]).push([[18],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[d]="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9186:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return d}});var r=n(7462),i=n(3366),o=(n(7294),n(4137)),a=["components"],c={id:"device_assignment",title:"Device Assignment",sidebar_label:"Device Assignment"},l=void 0,s={unversionedId:"job/device_assignment",id:"job/device_assignment",title:"Device Assignment",description:"By default, the job is executed in the device in which you are connected. To define a different device, use the keys where and whereCustom.",source:"@site/docs/job/device_assignment.md",sourceDirName:"job",slug:"/job/device_assignment",permalink:"/docs/job/device_assignment",draft:!1,editUrl:"https://github.com/runletapp/website/edit/main/docs/job/device_assignment.md",tags:[],version:"current",frontMatter:{id:"device_assignment",title:"Device Assignment",sidebar_label:"Device Assignment"},sidebar:"docs",previous:{title:"Definition",permalink:"/docs/job/definition"},next:{title:"Arguments",permalink:"/docs/job/arguments"}},u={},d=[{value:"Where: all",id:"where-all",level:3},{value:"Where: any",id:"where-any",level:3},{value:"Where: custom",id:"where-custom",level:3}],p={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"By default, the job is executed in the device in which you are connected. To define a different device, use the keys ",(0,o.kt)("inlineCode",{parentName:"p"},"where")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"whereCustom"),"."),(0,o.kt)("h3",{id:"where-all"},"Where: all"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"myjob:\n    script: ls -lah\n    where: all\n")),(0,o.kt)("p",null,"It runs ",(0,o.kt)("inlineCode",{parentName:"p"},"myjob")," in all connected devices. If there are three devices connected during the execution time, then three instances of ",(0,o.kt)("inlineCode",{parentName:"p"},"myjob")," will be created and executed in each device."),(0,o.kt)("h3",{id:"where-any"},"Where: any"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"myjob:\n    script: ls -lah\n    where: any\n")),(0,o.kt)("p",null,"It runs ",(0,o.kt)("inlineCode",{parentName:"p"},"myjob")," on the next available connected device. Note that this will create only one instance of the job."),(0,o.kt)("h3",{id:"where-custom"},"Where: custom"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"myjob:\n    script: ls -lah\n    where: custom\n    whereCustom:\n        - earth\n        - mars\n")),(0,o.kt)("p",null,"It runs ",(0,o.kt)("inlineCode",{parentName:"p"},"myjob")," on every device included on the ",(0,o.kt)("inlineCode",{parentName:"p"},"whereCustom")," list. Note that this will create one job for each specified device."))}m.isMDXComponent=!0}}]);